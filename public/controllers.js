// Generated by CoffeeScript 1.3.3

S2JApp.controller('DatabasesCtrl', function($scope, $http, $timeout) {
  var DynamicRefresh, refreshChecker;
  DynamicRefresh = (function() {

    function DynamicRefresh() {
      this.activePeriod = 15;
      this.minRequestInterval = 3;
      this.activeRequestInterval = this.activePeriod / 3.0;
    }

    DynamicRefresh.prototype.backOff = function(t) {
      if (t > this.activePeriod) {
        return 2 * t - this.activePeriod;
      } else {
        console.log("WARNING: Refresh rate backoff not working properly");
        return this.activePeriod;
      }
    };

    DynamicRefresh.prototype.refreshCheckSecs = function(idleTime) {
      var idleSecs;
      if (!idleTime) {
        return this.activePeriod;
      }
      idleSecs = idleTime / 1000.0;
      if (idleSecs > this.activePeriod) {
        return backOff(idleSecs);
      }
      if (this.activeRequestInterval > this.minRequestInterval) {
        return this.activeRequestInterval;
      }
      return this.minRequestInterval;
    };

    return DynamicRefresh;

  })();
  refreshChecker = (new DynamicRefresh()).refreshCheckSecs;
  console.log("Ctrl", $scope.s2j);
  $scope.checkDatabases = function() {
    var promise;
    console.log("checking connection", Date.now());
    promise = $http.get('/databases');
    return promise.success(function(data) {
      return $scope.dbs = data;
    });
  };
  $scope.repeatCheck = function() {
    var _base;
    $scope.checkDatabases();
    (_base = $scope.s2j).idleTime || (_base.idleTime = 15000);
    console.log("Repeating check", $scope.s2j.idleTime);
    return $timeout($scope.repeatCheck, 1000 * refreshChecker($scope.s2j.idleTime));
  };
  return $scope.repeatCheck();
});
